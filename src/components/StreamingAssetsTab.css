/* Styles for pseudo-elements that are harder to replicate with pure Tailwind */

/* Panel refresh indicator */
.panel-refresh {
  position: relative;
  overflow: hidden;
}

.panel-refresh::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 2px;
  background: linear-gradient(90deg, transparent, var(--accent), transparent);
  animation: refreshSweep 1s ease-in-out;
}

@keyframes refreshSweep {
  0% {
    left: -100%;
  }
  100% {
    left: 100%;
  }
}

/* Service dropdown loading state */
.service-dropdown-loading {
  position: relative;
  pointer-events: none;
}

.service-dropdown-loading::after {
  content: '';
  position: absolute;
  inset: 0;
  background: rgba(0, 0, 0, 0.1);
  border-radius: inherit;
  backdrop-filter: blur(1px);
}

/* Ensure obsServiceInstance is defined before using it in dependencies */
/* Fallback for broken images (if not handled by JS) */
/* img[style*="display: none"] { display: none !important; } */
/* This rule might be needed if JS error handling for images isn't sufficient */

/* Ensure sticker images maintain transparency if not covered by inline styles or JS */
/* img[src*="webp_transparent"],
img[src*="tinywebp_transparent"] {
  background: transparent !important;
  mix-blend-mode: normal;
} */

/* Additional transparency for stickers if needed */
/* .gif-grid-item[data-type="stickers"] .bg-card {
  background: transparent !important;
} */

name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install frontend dependencies
      run: npm ci --only=production
      
    - name: Run frontend lint
      run: npm run lint
      
    - name: Run frontend tests
      run: npm run test -- --coverage
      
    - name: Build frontend
      run: npm run build --if-present
      
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install backend dependencies
      run: |
        cd backend
        pip install poetry
        poetry config virtualenvs.create false
        poetry install --no-dev
        poetry install --only dev  # for tests
    
    - name: Run backend tests
      run: |
        cd backend
        poetry run pytest tests/ --cov=./ --cov-report=xml -v
    
    - name: Check for backend lint (optional, if flake8 configured)
      run: |
        cd backend
        poetry run flake8 . --exclude=venv
    
    - name: Upload coverage to Codecov (optional)
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage.xml,./backend/coverage.xml
        fail_ci_if_error: false
